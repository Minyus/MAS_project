<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BSS_Combined' inline='true' name='federated.05i8mpo1rubao418fjlff0dyczmr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BSS_Combined' name='textscan.1l5ki2z0hmsudu128l4sh1dymkw9'>
            <connection class='textscan' directory='C:/Users/U/Documents/C7_MAS/MAS_project/Boston_Hubway_Codes' filename='BSS_Combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1l5ki2z0hmsudu128l4sh1dymkw9' name='BSS_Combined.csv' table='[BSS_Combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='(run number)' ordinal='0' />
            <column datatype='integer' name='sim_timestep_minutes' ordinal='1' />
            <column datatype='integer' name='num_trucks' ordinal='2' />
            <column datatype='integer' name='duration_to_pick' ordinal='3' />
            <column datatype='integer' name='duration_to_drop' ordinal='4' />
            <column datatype='integer' name='truck_capacity' ordinal='5' />
            <column datatype='real' name='truck_speed' ordinal='6' />
            <column datatype='boolean' name='wait_for_demo?' ordinal='7' />
            <column datatype='string' name='rebalancing_method' ordinal='8' />
            <column datatype='real' name='wait_time' ordinal='9' />
            <column datatype='real' name='pct_station_capacity_to_drop' ordinal='10' />
            <column datatype='real' name='pct_station_capacity_to_pick' ordinal='11' />
            <column datatype='string' name='truck_movement' ordinal='12' />
            <column datatype='integer' name='shortage_threshold' ordinal='13' />
            <column datatype='integer' name='days_to_simulate' ordinal='14' />
            <column datatype='integer' name='(step)' ordinal='15' />
            <column datatype='integer' name='simulated_out_of_bikes_count' ordinal='16' />
            <column datatype='integer' name='simulated_out_of_docks_count' ordinal='17' />
            <column datatype='integer' name='sim_elapsed_hours' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(run number)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[(run number)]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>(run number)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sim_timestep_minutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sim_timestep_minutes]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>sim_timestep_minutes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_trucks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_trucks]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>num_trucks</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_to_pick</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_to_pick]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>duration_to_pick</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_to_drop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_to_drop]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>duration_to_drop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_capacity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[truck_capacity]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_capacity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[truck_speed]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_speed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait_for_demo?</remote-name>
            <remote-type>11</remote-type>
            <local-name>[wait_for_demo?]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>wait_for_demo?</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rebalancing_method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rebalancing_method]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>rebalancing_method</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wait_time]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>wait_time</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_station_capacity_to_drop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_station_capacity_to_drop]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>pct_station_capacity_to_drop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_station_capacity_to_pick</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_station_capacity_to_pick]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>pct_station_capacity_to_pick</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_movement</remote-name>
            <remote-type>129</remote-type>
            <local-name>[truck_movement]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_movement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shortage_threshold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shortage_threshold]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>shortage_threshold</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_to_simulate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_to_simulate]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>days_to_simulate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(step)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[(step)]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>(step)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_out_of_bikes_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[simulated_out_of_bikes_count]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>simulated_out_of_bikes_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_out_of_docks_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[simulated_out_of_docks_count]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>simulated_out_of_docks_count</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sim_elapsed_hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sim_elapsed_hours]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>sim_elapsed_hours</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='(Run Number)' datatype='integer' name='[(run number)]' role='measure' type='quantitative' />
      <column caption='(Step)' datatype='integer' name='[(step)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Days To Simulate' datatype='integer' name='[days_to_simulate]' role='measure' type='quantitative' />
      <column caption='Duration To Drop' datatype='integer' name='[duration_to_drop]' role='measure' type='quantitative' />
      <column caption='Duration To Pick' datatype='integer' name='[duration_to_pick]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Num Trucks' datatype='integer' name='[num_trucks]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Pct Station Capacity To Drop' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_drop]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Pct Station Capacity To Pick' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_pick]' role='dimension' type='ordinal' />
      <column caption='Rebalancing Method' datatype='string' name='[rebalancing_method]' role='dimension' type='nominal' />
      <column caption='Shortage Threshold' datatype='integer' name='[shortage_threshold]' role='measure' type='quantitative' />
      <column caption='Sim Elapsed Hours' datatype='integer' name='[sim_elapsed_hours]' role='measure' type='quantitative' />
      <column caption='Sim Timestep Minutes' datatype='integer' name='[sim_timestep_minutes]' role='measure' type='quantitative' />
      <column caption='Simulated Out Of Bikes Count' datatype='integer' name='[simulated_out_of_bikes_count]' role='measure' type='quantitative' />
      <column caption='Simulated Out Of Docks Count' datatype='integer' name='[simulated_out_of_docks_count]' role='measure' type='quantitative' />
      <column caption='Truck Capacity' datatype='integer' name='[truck_capacity]' role='measure' type='quantitative' />
      <column caption='Truck Movement' datatype='string' name='[truck_movement]' role='dimension' type='nominal' />
      <column caption='Truck Speed' datatype='real' name='[truck_speed]' role='measure' type='quantitative' />
      <column caption='Wait For Demo?' datatype='boolean' name='[wait_for_demo?]' role='dimension' type='nominal' />
      <column caption='Wait Time' datatype='real' name='[wait_time]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369565' measure-ordering='alphabetic' measure-percentage='0.630435' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Box-Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='BSS_Combined' name='federated.05i8mpo1rubao418fjlff0dyczmr' />
          </datasources>
          <datasource-dependencies datasource='federated.05i8mpo1rubao418fjlff0dyczmr'>
            <column-instance column='[num_trucks]' derivation='None' name='[none:num_trucks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pct_station_capacity_to_drop]' derivation='None' name='[none:pct_station_capacity_to_drop:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pct_station_capacity_to_pick]' derivation='None' name='[none:pct_station_capacity_to_pick:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rebalancing_method]' derivation='None' name='[none:rebalancing_method:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Num Trucks' datatype='integer' name='[num_trucks]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Pct Station Capacity To Drop' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_drop]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Pct Station Capacity To Pick' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_pick]' role='dimension' type='ordinal' />
            <column caption='Rebalancing Method' datatype='string' name='[rebalancing_method]' role='dimension' type='nominal' />
            <column caption='Simulated Out Of Bikes Count' datatype='integer' name='[simulated_out_of_bikes_count]' role='measure' type='quantitative' />
            <column caption='Simulated Out Of Docks Count' datatype='integer' name='[simulated_out_of_docks_count]' role='measure' type='quantitative' />
            <column-instance column='[simulated_out_of_bikes_count]' derivation='Sum' name='[sum:simulated_out_of_bikes_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_out_of_docks_count]' derivation='Sum' name='[sum:simulated_out_of_docks_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok]' value='56' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk]' value='96' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_drop:ok]' value='92' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#e15759' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' z-order='1' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' z-order='2' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' enable-instant-analytics='true' formula='median' id='refline2' label-type='none' probability='95' scope='per-cell' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' z-order='3' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='none' probability='95' scope='per-cell' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk] / ([federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_drop:ok] / ([federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_pick:ok] / [federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok])))</rows>
        <cols>([federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk] + [federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Box-Plot'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok]</field>
            <field>[federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Box-Plot' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
