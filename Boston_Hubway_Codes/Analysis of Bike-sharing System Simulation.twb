<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BSS_Combined' inline='true' name='federated.05i8mpo1rubao418fjlff0dyczmr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BSS_Combined' name='textscan.1l5ki2z0hmsudu128l4sh1dymkw9'>
            <connection class='textscan' directory='C:/Users/U/Documents/C7_MAS/MAS_project/Boston_Hubway_Codes' filename='BSS_Combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1l5ki2z0hmsudu128l4sh1dymkw9' name='BSS_Combined.csv' table='[BSS_Combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='(run number)' ordinal='0' />
            <column datatype='integer' name='sim_timestep_minutes' ordinal='1' />
            <column datatype='integer' name='num_trucks' ordinal='2' />
            <column datatype='integer' name='duration_to_pick' ordinal='3' />
            <column datatype='integer' name='duration_to_drop' ordinal='4' />
            <column datatype='integer' name='truck_capacity' ordinal='5' />
            <column datatype='real' name='truck_speed' ordinal='6' />
            <column datatype='boolean' name='wait_for_demo?' ordinal='7' />
            <column datatype='string' name='rebalancing_method' ordinal='8' />
            <column datatype='real' name='wait_time' ordinal='9' />
            <column datatype='real' name='pct_station_capacity_to_drop' ordinal='10' />
            <column datatype='real' name='pct_station_capacity_to_pick' ordinal='11' />
            <column datatype='string' name='truck_movement' ordinal='12' />
            <column datatype='integer' name='shortage_threshold' ordinal='13' />
            <column datatype='integer' name='days_to_simulate' ordinal='14' />
            <column datatype='integer' name='(step)' ordinal='15' />
            <column datatype='integer' name='simulated_out_of_bikes_count' ordinal='16' />
            <column datatype='integer' name='simulated_out_of_docks_count' ordinal='17' />
            <column datatype='integer' name='sim_elapsed_hours' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(run number)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[(run number)]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>(run number)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sim_timestep_minutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sim_timestep_minutes]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>sim_timestep_minutes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_trucks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_trucks]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>num_trucks</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_to_pick</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_to_pick]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>duration_to_pick</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_to_drop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_to_drop]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>duration_to_drop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_capacity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[truck_capacity]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_capacity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[truck_speed]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_speed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait_for_demo?</remote-name>
            <remote-type>11</remote-type>
            <local-name>[wait_for_demo?]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>wait_for_demo?</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rebalancing_method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rebalancing_method]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>rebalancing_method</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wait_time]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>wait_time</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_station_capacity_to_drop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_station_capacity_to_drop]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>pct_station_capacity_to_drop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_station_capacity_to_pick</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_station_capacity_to_pick]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>pct_station_capacity_to_pick</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truck_movement</remote-name>
            <remote-type>129</remote-type>
            <local-name>[truck_movement]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>truck_movement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shortage_threshold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shortage_threshold]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>shortage_threshold</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_to_simulate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_to_simulate]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>days_to_simulate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(step)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[(step)]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>(step)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_out_of_bikes_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[simulated_out_of_bikes_count]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>simulated_out_of_bikes_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_out_of_docks_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[simulated_out_of_docks_count]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>simulated_out_of_docks_count</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sim_elapsed_hours</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sim_elapsed_hours]</local-name>
            <parent-name>[BSS_Combined.csv]</parent-name>
            <remote-alias>sim_elapsed_hours</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='(Run Number)' datatype='integer' name='[(run number)]' role='measure' type='quantitative' />
      <column caption='(Step)' datatype='integer' name='[(step)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Days To Simulate' datatype='integer' name='[days_to_simulate]' role='measure' type='quantitative' />
      <column caption='Duration To Drop' datatype='integer' name='[duration_to_drop]' role='measure' type='quantitative' />
      <column caption='Duration To Pick' datatype='integer' name='[duration_to_pick]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Num Trucks' datatype='integer' name='[num_trucks]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Pct Station Capacity To Drop' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_drop]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Pct Station Capacity To Pick' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_pick]' role='dimension' type='ordinal' />
      <column caption='Rebalancing Method' datatype='string' name='[rebalancing_method]' role='dimension' type='nominal' />
      <column caption='Shortage Threshold' datatype='integer' name='[shortage_threshold]' role='measure' type='quantitative' />
      <column caption='Sim Elapsed Hours' datatype='integer' name='[sim_elapsed_hours]' role='measure' type='quantitative' />
      <column caption='Sim Timestep Minutes' datatype='integer' name='[sim_timestep_minutes]' role='measure' type='quantitative' />
      <column caption='Simulated Out Of Bikes Count' datatype='integer' name='[simulated_out_of_bikes_count]' role='measure' type='quantitative' />
      <column caption='Simulated Out Of Docks Count' datatype='integer' name='[simulated_out_of_docks_count]' role='measure' type='quantitative' />
      <column caption='Truck Capacity' datatype='integer' name='[truck_capacity]' role='measure' type='quantitative' />
      <column caption='Truck Movement' datatype='string' name='[truck_movement]' role='dimension' type='nominal' />
      <column caption='Truck Speed' datatype='real' name='[truck_speed]' role='measure' type='quantitative' />
      <column caption='Wait For Demo?' datatype='boolean' name='[wait_for_demo?]' role='dimension' type='nominal' />
      <column caption='Wait Time' datatype='real' name='[wait_time]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369565' measure-ordering='alphabetic' measure-percentage='0.630435' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Box-Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='BSS_Combined' name='federated.05i8mpo1rubao418fjlff0dyczmr' />
          </datasources>
          <datasource-dependencies datasource='federated.05i8mpo1rubao418fjlff0dyczmr'>
            <column-instance column='[num_trucks]' derivation='None' name='[none:num_trucks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pct_station_capacity_to_drop]' derivation='None' name='[none:pct_station_capacity_to_drop:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pct_station_capacity_to_pick]' derivation='None' name='[none:pct_station_capacity_to_pick:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rebalancing_method]' derivation='None' name='[none:rebalancing_method:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Num Trucks' datatype='integer' name='[num_trucks]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Pct Station Capacity To Drop' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_drop]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Pct Station Capacity To Pick' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[pct_station_capacity_to_pick]' role='dimension' type='ordinal' />
            <column caption='Rebalancing Method' datatype='string' name='[rebalancing_method]' role='dimension' type='nominal' />
            <column caption='Simulated Out Of Bikes Count' datatype='integer' name='[simulated_out_of_bikes_count]' role='measure' type='quantitative' />
            <column caption='Simulated Out Of Docks Count' datatype='integer' name='[simulated_out_of_docks_count]' role='measure' type='quantitative' />
            <column-instance column='[simulated_out_of_bikes_count]' derivation='Sum' name='[sum:simulated_out_of_bikes_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_out_of_docks_count]' derivation='Sum' name='[sum:simulated_out_of_docks_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok]' value='56' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk]' value='96' />
            <format attr='width' field='[federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_drop:ok]' value='92' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#e15759' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-color' id='refline3' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' z-order='1' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' z-order='2' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' enable-instant-analytics='true' formula='median' id='refline2' label-type='none' probability='95' scope='per-cell' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]' z-order='3' />
            <reference-line axis-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='none' probability='95' scope='per-cell' value-column='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk] / ([federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_pick:ok] / ([federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_drop:ok] / [federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok])))</rows>
        <cols>([federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_bikes_count:qk] + [federated.05i8mpo1rubao418fjlff0dyczmr].[sum:simulated_out_of_docks_count:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Box-Plot'>
      <cards>
        <edge name='left'>
          <strip size='132'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.05i8mpo1rubao418fjlff0dyczmr].[none:num_trucks:ok]</field>
            <field>[federated.05i8mpo1rubao418fjlff0dyczmr].[none:pct_station_capacity_to_pick:ok]</field>
            <field>[federated.05i8mpo1rubao418fjlff0dyczmr].[none:rebalancing_method:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Box-Plot' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
